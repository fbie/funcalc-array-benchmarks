+#title: Parallel Funcalc Benchmarks

* Intro

We have benchmarked Funcalc on our benchmarking server.  We have benchmarked Funcalc with
[[https://github.com/popular-parallel-programming/funcalc-euses][converted spreadsheets from the EUSES corpus]] using the file ~benchmark.bat~.

The date at which the benchmarks have been run can be found in the file ~build.log~ in each folder.


* Meta-Statistics

How many arrays did the algorithm convert per sheet?

#+begin_src R :session :results value
  errs <- list.files(path="arrays", pattern="err", full.names=TRUE)
  lifts <- sapply(errs, (function (err) {
      for (line in scan(err, what = character(), sep = "\n")) {
          if (grepl("Lifted", line))
            return(line)
      }
  }))
  cbind(sapply(errs, function (x) { sub(".err", "", x)}), lifts)
#+end_src

#+RESULTS:

| arrays/02rise.xml                      | Lifted 1 intransitive, 0 transitive cell arrays.  |
| arrays/2000_places_School.xml            | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/2002Qvols.xml                   | Lifted 2 intransitive, 0 transitive cell arrays.  |
| arrays/2004_PUBLIC_BUGS_INVENTORY.xml     | Lifted 4 intransitive, 0 transitive cell arrays.  |
| arrays/Aggregate20Governanc#A8A51.xml  | Lifted 30 intransitive, 0 transitive cell arrays. |
| arrays/EducAge25.xml                   | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/financial-model-spreadsheet.xml | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/Financial-Projections.xml       | Lifted 5 intransitive, 0 transitive cell arrays.  |
| arrays/funding.xml                     | Lifted 6 intransitive, 0 transitive cell arrays.  |
| arrays/high_2003_belg.xml                | Lifted 3 intransitive, 1 transitive cell arrays.  |
| arrays/iste-cs-2003-modeling-sim.xml   | Lifted 2 intransitive, 0 transitive cell arrays.  |
| arrays/modeling-3.xml                  | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/MRP_Excel.xml                    | Lifted 44 intransitive, 6 transitive cell arrays. |
| arrays/notes5CMISB200SP04H2KEY.xml     | Lifted 3 intransitive, 0 transitive cell arrays.  |
| arrays/ny_emit99.xml                    | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/Test20Station20Powe#A90F3.xml   | Lifted 9 intransitive, 0 transitive cell arrays.  |
| arrays/Time.xml                        | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/v1tmp.xml                       | Lifted 0 intransitive, 0 transitive cell arrays.  |
| arrays/WasteCalendarCalculat#A843B.xml | Lifted 3 intransitive, 0 transitive cell arrays.  |


It seems that

1. cell arrays are in general smaller than we expected (< 64 cells); and
2. there are many cell arrays that would introduce cyclic dependencies when lifted.


* Initial Data Probing

Let's see how well we're doing.

#+begin_src R :session :results value
  # file <- "MRP_Excel.xml"
  file <- "Aggregate20Governanc#A8A51.xml"
  readLog <- function (prefix, file) {
      return (read.table(paste(prefix, "/", file, ".out", sep=""),
                         dec=".",
                         row.names=3,
                         col.names=c("iteration", "mode", "elapsed"),
                         skip=2,
                         stringsAsFactors=TRUE))
  }

  # Turns elapsed milliseconds into doubles.
  getElapsed <- function (vals) {
      as.double(sapply(vals[2], function (x) {
          return(sub(",", ".", sub("ms", "", x)))
      }))
  }

  getSpeedup <- function (experiments, baseline, file) {
    perf      <- readLog(experiments, file)
    base      <- readLog(baseline, file)
    base_mean <- mean(getElapsed(base))
    speedups  <- sapply(getElapsed(perf), function (x) { return (base_mean / x)})
    c(mean(speedups), sd(speedups))
  }
  cbind(c("Mean", "Stddev"), getSpeedup("euses/arrays", "euses/seq", file))
#+end_src

#+RESULTS:
| Mean   |  0.728161362682299 |
| Stddev | 0.0396664158596318 |

#+begin_src R :session :results graphics :file plots/MRP_Excel_array_plot.png
  plot(getElapsed(array))
#+end_src

#+RESULTS:
[[file:plots/MRP_Excel_array_plot.png]]

#+begin_src R :session :results graphics :file plots/MRP_Excel_array_hist.png
  hist(getElapsed(array), freq=0.1)
#+end_src

#+RESULTS:
[[file:plots/MRP_Excel_array_hist.png]]


* Overall Analysis

#+begin_src R :session :results value
  files <- list.files("euses/arrays", pattern="out")
  speedups <- t(sapply(files,
                       function (file) {
                           f <- gsub(".out", "", file)
                           s <- getSpeedup("euses/arrays", "euses/seq", f)
                           return(rbind(f, s[1], s[2]))
                       }))
  speedups.row.names <- files
  speedups
#+end_src

#+RESULTS:
| 02rise.xml                      |  1.29935115137683 |  0.0111817642131435 |
| 2000_places_School.xml            | 0.958804022733049 |  0.0196463874124325 |
| 2002Qvols.xml                   |  1.05445146981825 |  0.0579153407486464 |
| 2004_PUBLIC_BUGS_INVENTORY.xml     |  2.55936080359615 |  0.0432220803385926 |
| Aggregate20Governanc#A8A51.xml  | 0.728161362682299 |  0.0396664158596318 |
| EducAge25.xml                   | 0.992521322687699 |    0.01316451835416 |
| financial-model-spreadsheet.xml |  1.00408488642795 |  0.0185798889449448 |
| Financial-Projections.xml       | 0.671978492275997 |   0.172038397229881 |
| funding.xml                     | 0.938115923760974 |  0.0127707539968076 |
| high_2003_belg.xml                |  1.00804140160569 | 0.00713195684269357 |
| iste-cs-2003-modeling-sim.xml   |  1.06686689564902 |  0.0221215932381738 |
| modeling-3.xml                  | 0.885667106961191 |  0.0644298329546388 |
| MRP_Excel.xml                    |  1.00783552107408 | 0.00759186384897456 |
| notes5CMISB200SP04H2KEY.xml     | 0.896945932800307 |  0.0299784889824813 |
| ny_emit99.xml                    |  0.99600164373344 | 0.00573464551245189 |
| Test20Station20Powe#A90F3.xml   |  1.18589834624624 |  0.0388060699704289 |
| Time.xml                        |  1.03850249246594 |   0.011969563831197 |
| v1tmp.xml                       |  1.13224970460943 |  0.0261843664370754 |
| WasteCalendarCalculat#A843B.xml | 0.892923891815097 |   0.104011986966532 |


#+begin_src R :session :results graphics :file plots/errorbars.png
  plot.bar <- function (cols, col) {
      ts <- t(matrix(cols[,col]))
      ts.names <- cols[,1]
      return(barplot(ts))
  }
  plot.bar(speedups, 2)
#+end_src

#+RESULTS:
[[file:plots/errorbars.png]]
